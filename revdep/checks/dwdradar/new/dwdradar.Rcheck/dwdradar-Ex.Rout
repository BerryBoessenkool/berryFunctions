
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "dwdradar"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('dwdradar')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("readRadarFile")
> ### * readRadarFile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readRadarFile
> ### Title: read binary radolan radar file
> ### Aliases: readRadarFile
> ### Keywords: binary file
> 
> ### ** Examples
> 
> 
> f <- system.file("extdata/raa01_sf_2019-10-14_1950", package="dwdradar")
> out <- readRadarFile(f)
> out$meta
$filename
[1] "C:/Dropbox/Rpack/berryFunctions/revdep/checks/dwdradar/new/dwdradar.Rcheck/dwdradar/extdata/raa01_sf_2019-10-14_1950"

$date
[1] "2019-10-14 19:50:00 CEST"

$product
[1] "SF"

$location
[1] "10000"

$id_vs
[1] "VS"

$radolan_version
[1] "   2.21.0"

$precision
[1] 0.1

$interval_minutes
[1] 1440

$dim
[1] 900 900

$radius_format
[1] " 3"

$radars
 [1] "asb" "boo" "ros" "hnr" "umd" "pro" "ess" "fld" "drs" "neu" "nhb" "oft"
[13] "eis" "tur" "isn" "fbg" "mem"

$radarn
 [1] "asb 24" "boo 24" "drs 24" "eis 24" "ess 24" "fbg 24" "fld 24" "hnr 24"
 [9] "isn 24" "mem 24" "neu 24" "nhb 24" "oft 24" "pro 24" "ros 24" "tur 24"
[17] "umd 24"

> 
> if(requireNamespace("raster", quietly=TRUE))
+   raster::plot(raster::raster(out$dat))
> 
> # for more files, see the tests.
> # for real-world usage, readDWD.binary / readDWD.radar in the rdwd package
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.9 0.08 2.09 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
